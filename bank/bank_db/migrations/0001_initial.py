# Generated by Django 5.0.6 on 2024-06-17 06:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductosProductos',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imagen', models.CharField(max_length=100)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('precio', models.DecimalField(decimal_places=2, max_digits=11)),
            ],
            options={
                'db_table': 'productos_productos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MainData',
            fields=[
                ('customer_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('loan_id', models.IntegerField(blank=True, null=True)),
                ('acc_creation_datetime', models.DateTimeField(blank=True, db_column='ACC_CREATION_DATETIME', null=True)),
                ('application_datetime', models.DateTimeField(blank=True, db_column='APPLICATION_DATETIME', null=True)),
                ('loan_origination_datetime', models.DateTimeField(blank=True, db_column='LOAN_ORIGINATION_DATETIME', null=True)),
                ('max_days_late', models.IntegerField(blank=True, null=True)),
                ('target', models.IntegerField(blank=True, null=True)),
                ('account_to_application_days', models.IntegerField(blank=True, null=True)),
                ('n_sf_apps', models.FloatField(blank=True, null=True)),
                ('first_app_date', models.DateTimeField(blank=True, null=True)),
                ('last_app_date', models.DateTimeField(blank=True, null=True)),
                ('n_bnpl_apps', models.FloatField(blank=True, null=True)),
                ('n_bnpl_approved_apps', models.FloatField(blank=True, null=True)),
                ('first_bnpl_app_date', models.DateTimeField(blank=True, null=True)),
                ('last_bnpl_app_date', models.DateTimeField(blank=True, null=True)),
                ('n_inquiries_l3m', models.FloatField(blank=True, null=True)),
                ('n_inquiries_l6m', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'main_data',
            },
        ),
        migrations.CreateModel(
            name='CreditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inquiry_time', models.DateTimeField(blank=True, db_column='INQUIRY_TIME', null=True)),
                ('cdc_inquiry_id', models.CharField(blank=True, db_column='CDC_INQUIRY_ID', max_length=255, null=True)),
                ('inquiry_date', models.DateTimeField(blank=True, db_column='INQUIRY_DATE', null=True)),
                ('prevention_key', models.CharField(blank=True, db_column='PREVENTION_KEY', max_length=255, null=True)),
                ('currency', models.CharField(blank=True, db_column='CURRENCY', max_length=255, null=True)),
                ('max_credit', models.FloatField(blank=True, db_column='MAX_CREDIT', null=True)),
                ('credit_limit', models.FloatField(blank=True, db_column='CREDIT_LIMIT', null=True)),
                ('payment_amount', models.FloatField(blank=True, db_column='PAYMENT_AMOUNT', null=True)),
                ('update_date', models.DateTimeField(blank=True, db_column='UPDATE_DATE', null=True)),
                ('loan_opening_date', models.DateTimeField(blank=True, db_column='LOAN_OPENING_DATE', null=True)),
                ('loan_closing_date', models.DateTimeField(blank=True, db_column='LOAN_CLOSING_DATE', null=True)),
                ('worst_delay_date', models.DateTimeField(blank=True, db_column='WORST_DELAY_DATE', null=True)),
                ('report_date', models.DateTimeField(blank=True, db_column='REPORT_DATE', null=True)),
                ('last_purchase_date', models.DateTimeField(blank=True, db_column='LAST_PURCHASE_DATE', null=True)),
                ('last_payment_date', models.DateTimeField(blank=True, db_column='LAST_PAYMENT_DATE', null=True)),
                ('payment_frequency', models.CharField(blank=True, db_column='PAYMENT_FREQUENCY', max_length=255, null=True)),
                ('business_type', models.CharField(blank=True, db_column='BUSINESS_TYPE', max_length=255, null=True)),
                ('credit_type', models.CharField(blank=True, db_column='CREDIT_TYPE', max_length=255, null=True)),
                ('account_type', models.CharField(blank=True, db_column='ACCOUNT_TYPE', max_length=255, null=True)),
                ('responsability_type', models.CharField(blank=True, db_column='RESPONSABILITY_TYPE', max_length=255, null=True)),
                ('total_payments', models.FloatField(blank=True, db_column='TOTAL_PAYMENTS', null=True)),
                ('delayed_payments', models.FloatField(blank=True, db_column='DELAYED_PAYMENTS', null=True)),
                ('current_payment', models.CharField(blank=True, db_column='CURRENT_PAYMENT', max_length=255, null=True)),
                ('worst_delay', models.FloatField(blank=True, db_column='WORST_DELAY', null=True)),
                ('total_reported_payments', models.FloatField(blank=True, db_column='TOTAL_REPORTED_PAYMENTS', null=True)),
                ('current_balance', models.FloatField(blank=True, db_column='CURRENT_BALANCE', null=True)),
                ('balance_due', models.FloatField(blank=True, db_column='BALANCE_DUE', null=True)),
                ('balance_due_worst_delay', models.FloatField(blank=True, db_column='BALANCE_DUE_WORST_DELAY', null=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_histories', to='bank_db.maindata')),
            ],
            options={
                'db_table': 'credit_history',
            },
        ),
    ]
